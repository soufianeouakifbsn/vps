@@ -1,87 +1,112 @@
#!/bin/bash

# ๐ ุงููุชุบูุฑุงุช
DOMAIN="postiz.soufianeautomation.space"   # ุบููุฑ ุญุณุจ ุงูุฏูููู ุงูุฎุงุต ุจู
EMAIL="soufianeouakifbsn@gmail.com"       # ุถุน ุจุฑูุฏู ููุง ูุฅุฏุงุฑุฉ SSL
DOMAIN="postiz.soufianeautomation.space"    # ุบููุฑ ููุฏูููู ุงูุฎุงุต ุจู
EMAIL="soufianeouakifbsn@gmail.com"        # ุจุฑูุฏู ููุญุตูู ุนูู SSL
POSTIZ_DATA="$HOME/postiz_data"

echo "๐ ุจุฏุก ุชุซุจูุช Postiz ุนูู $DOMAIN ..."
echo "๐ ุจุฏุก ุงูุชุซุจูุช ุงูุชููุงุฆู ูู Postiz ุนูู $DOMAIN ..."

# ุชุญุฏูุซ ุงููุธุงู
sudo apt update && sudo apt upgrade -y

# ุชุซุจูุช ุงูุฃุฏูุงุช ุงูุฃุณุงุณูุฉ
sudo apt install -y docker.io docker-compose nginx certbot python3-certbot-nginx ufw
sudo apt install -y docker.io docker-compose nginx certbot python3-certbot-nginx ufw git

# ุชูุนูู Docker
sudo systemctl enable docker
sudo systemctl start docker

# ๐งน ุญุฐู ุฃู ุญุงููุงุช ูุฏููุฉ ูู Postiz
sudo docker stop postiz 2>/dev/null || true
sudo docker rm postiz 2>/dev/null || true

# ุฅูุดุงุก ูุฌูุฏ ุจูุงูุงุช Postiz
mkdir -p ~/postiz_data
sudo chown -R 1000:1000 ~/postiz_data

# ๐ณ ุชุดุบูู Postiz ูู Docker
sudo docker run -d --name postiz \
  -p 3000:3000 \
  -v ~/postiz_data:/app/data \
  -e MAIN_URL="https://$DOMAIN" \
  --restart unless-stopped \
  ghcr.io/gitroomhq/postiz-app:latest

# โ ุงูุงูุชุธุงุฑ ููุชุฃูุฏ ูู ุฃู ุงูุญุงููุฉ ุชุนูู
sleep 10
if [ "$(sudo docker inspect -f '{{.State.Running}}' postiz)" != "true" ]; then
  echo "โ ุฎุทุฃ: ุญุงููุฉ Postiz ูู ุชุนูู ุจูุฌุงุญ. ุชุญูู ูู logs:"
  sudo docker logs postiz
  exit 1
fi

# ๐ง ุฅุนุฏุงุฏ Nginx ูู Reverse Proxy
# ุฅูุดุงุก ูุฌูุฏ ุงูุจูุงูุงุช
mkdir -p $POSTIZ_DATA
sudo chown -R 1000:1000 $POSTIZ_DATA

# ุฅูุดุงุก ููู Docker Compose
tee $POSTIZ_DATA/docker-compose.yml > /dev/null <<EOF
version: '3.9'

services:
  postgresql:
    image: postgres:15
    container_name: postiz_postgres
    environment:
      POSTGRES_USER: postiz
      POSTGRES_PASSWORD: postizpass
      POSTGRES_DB: postizdb
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: postiz_redis
    volumes:
      - ./redis_data:/data
    restart: unless-stopped

  postiz:
    image: ghcr.io/gitroomhq/postiz-app:latest
    container_name: postiz
    environment:
      MAIN_URL: "https://$DOMAIN"
      DATABASE_URL: "postgresql://postiz:postizpass@postgresql:5432/postizdb"
      REDIS_URL: "redis://redis:6379"
    ports:
      - "3000:3000"
    depends_on:
      - postgresql
      - redis
    restart: unless-stopped
EOF

# ุชุดุบูู Docker Compose
cd $POSTIZ_DATA
sudo docker-compose up -d

# โ ุงูุชุฃูุฏ ูู ุชุดุบูู ุงูุญุงููุงุช
sleep 15
echo "๐น ุญุงูุฉ ุงูุญุงููุงุช:"
sudo docker-compose ps

# ุฅุนุฏุงุฏ Nginx ูู Reverse Proxy
sudo tee /etc/nginx/sites-available/postiz.conf > /dev/null <<EOF
server {
    server_name $DOMAIN;

    location / {
        proxy_pass http://127.0.0.1:3000;

        # โ ุชูุฑูุฑ ุงูููุฏุฑ ุจุดูู ุตุญูุญ
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;

        # โ ููุน ุงููุทุงุน ุงูุงุชุตุงู
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
        send_timeout 600s;
    }
}
EOF

# ุชูุนูู ุงููููุน
# ุชูุนูู ุงููููุน ูุฅุนุงุฏุฉ ุชุดุบูู Nginx
sudo ln -s /etc/nginx/sites-available/postiz.conf /etc/nginx/sites-enabled/ || true
sudo nginx -t && sudo systemctl restart nginx

# ๐ ุงูุญุตูู ุนูู SSL ูู Let's Encrypt
# ุงูุญุตูู ุนูู SSL ูู Let's Encrypt
sudo certbot --nginx -d $DOMAIN --non-interactive --agree-tos -m $EMAIL

# ูุชุญ ุงูุฌุฏุงุฑ ุงููุงุฑู (UFW)
# ูุชุญ ุงูุฌุฏุงุฑ ุงููุงุฑู
sudo ufw allow OpenSSH
sudo ufw allow 'Nginx Full'
sudo ufw --force enable

# ๐ก๏ธ ุชุซุจูุช Watchtower ููุชุญุฏูุซ ุงูุชููุงุฆู
# ุชุซุจูุช Watchtower ููุชุญุฏูุซ ุงูุชููุงุฆู
sudo docker stop watchtower 2>/dev/null || true
sudo docker rm watchtower 2>/dev/null || true
sudo docker run -d \
  --name watchtower \
  -v /var/run/docker.sock:/var/run/docker.sock \
  containrrr/watchtower postiz --cleanup --interval 3600

echo "โ ุชู ุชุซุจูุช Postiz ุนูู https://$DOMAIN"
echo "๐ ุงูุชุญ ุงููููุน ูุฅูุดุงุก ุญุณุงุจู ูุจุฏุก ุงูุงุณุชุฎุฏุงู."
echo "๐ Watchtower ุณูุชุญูู ูู ุณุงุนุฉ ูู ูุฌูุฏ ุชุญุฏูุซ ุฌุฏูุฏ ูู Postiz ููุทุจูู ุชููุงุฆููุง."
echo "โ ุชู ุชุซุจูุช Postiz ุจุงููุงูู ุนูู https://$DOMAIN"
echo "๐ ุงูุชุญ ุงููููุน ูุฅูุดุงุก ุงูุญุณุงุจ ูุจุฏุก ุงูุงุณุชุฎุฏุงู!"
