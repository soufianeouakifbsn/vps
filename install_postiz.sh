@@ -3,6 +3,7 @@ set -euo pipefail

#############################################
# Postiz + Docker Compose + ngrok installer #
# + ุฅูุดุงุก ุญุณุงุจ ูุณุคูู ุชููุงุฆู ุจุนุฏ ุงูุชุดุบูู #
#############################################

# ===[ ุฅุนุฏุงุฏุงุช ูุงุจูุฉ ููุชุนุฏูู ]===
@@ -13,6 +14,11 @@ POSTIZ_IMAGE="ghcr.io/gitroomhq/postiz-app:latest"
POSTIZ_JWT_SECRET="$(tr -dc A-Za-z0-9 </dev/urandom | head -c 64 || true)"
POSTIZ_PORT="5000"

# ุจูุงูุงุช ุญุณุงุจ ุงููุณุคูู (ุบูุฑูุง ุญุณุจ ุฑุบุจุชู)
ADMIN_EMAIL="admin@example.com"
ADMIN_USERNAME="admin"
ADMIN_PASSWORD="admin123"

echo "๐ ุจุฏุก ุชุซุจูุช Postiz..."

# ---------------------------------
@@ -29,7 +35,7 @@ echo "โ ุชู ุชูุนูู ูุฌููุนุฉ docker ูููุณุชุฎุฏู ุงูุญุงูู."
EONG
fi

if ! docker compose version &>/dev/null; then
if ! docker compose version &>/dev/null && ! docker-compose version &>/dev/null; then
  echo "๐ง ุชุซุจูุช Docker Compose ูุฏูููุง..."
  sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  sudo chmod +x /usr/local/bin/docker-compose
@@ -172,6 +178,36 @@ echo "๐ณ ุชุดุบูู Postiz ุจุงุณุชุฎุฏุงู docker-compose..."
docker-compose pull
docker-compose up -d

# ---------------------------------
# 8) ุงูุชุธุงุฑ ุซูุงูู ุญุชู ุชุจุฏุฃ ุงูุญุงููุงุช
# ---------------------------------
echo "โ๏ธ ุงูุชุธุฑ 20 ุซุงููุฉ ุญุชู ุชุดุชุบู ุงูุญุงููุงุช..."
sleep 20

# ---------------------------------
# 9) ุฅูุดุงุก ุญุณุงุจ ุงููุณุคูู ุชููุงุฆููุง ุฏุงุฎู ุงูุญุงููุฉ
# ---------------------------------
echo "๐ ุฅูุดุงุก ุญุณุงุจ ูุณุคูู ุชููุงุฆููุง..."

docker exec -i postiz /bin/sh -c " \
  node -e \"(async () => { \
    const { prisma } = require('@prisma/client'); \
    const bcrypt = require('bcrypt'); \
    const prismaClient = new prisma.PrismaClient(); \
    const exists = await prismaClient.user.findFirst({ where: { email: '$ADMIN_EMAIL' } }); \
    if (!exists) { \
      const hashedPassword = await bcrypt.hash('$ADMIN_PASSWORD', 10); \
      await prismaClient.user.create({ data: { email: '$ADMIN_EMAIL', username: '$ADMIN_USERNAME', password: hashedPassword, role: 'ADMIN' } }); \
      console.log('โ ุญุณุงุจ ุงููุณุคูู ุชู ุฅูุดุงุคู'); \
    } else { \
      console.log('โน๏ธ ุญุณุงุจ ุงููุณุคูู ููุฌูุฏ ูุณุจููุง'); \
    } \
    process.exit(0); \
  })().catch(e => { console.error(e); process.exit(1); });\" \
"

echo ""
echo "โ ุชู ุงูุชุซุจูุช ุจูุฌุงุญ!"
echo "โ ุงูุชุซุจูุช ูุงูุงูุดุงุก ุงูุชูู!"
echo "๐ ุงูุชุญ ุงูุขู: https://${NGROK_DOMAIN}"
echo "๐ง ุญุณุงุจ ุงููุณุคูู: $ADMIN_EMAIL"
echo "๐ ูููุฉ ุงููุฑูุฑ: $ADMIN_PASSWORD"
