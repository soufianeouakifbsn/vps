#!/bin/bash

# ๐ ุงููุชุบูุฑุงุช
DOMAIN="postiz.soufianeautomation.space           # ุบููุฑ ุญุณุจ ุงูุฏูููู ุงูุฎุงุต ุจู
EMAIL="soufianeouakifbsn@gmail.com"             # ุถุน ุจุฑูุฏู ููุง ูุฅุฏุงุฑุฉ SSL
JWT_SECRET="$(openssl rand -base64 32)"  # ุชูููุฏ JWT secret ุนุดูุงุฆู

echo "๐ ุจุฏุก ุชุซุจูุช Postiz ุนูู $DOMAIN ..."

# ุชุญุฏูุซ ุงููุธุงู
sudo apt update && sudo apt upgrade -y

# ุชุซุจูุช ุงูุฃุฏูุงุช ุงูุฃุณุงุณูุฉ
sudo apt install -y docker.io docker-compose nginx certbot python3-certbot-nginx ufw openssl

# ุชูุนูู Docker
sudo systemctl enable docker
sudo systemctl start docker

# ุฅุถุงูุฉ ุงููุณุชุฎุฏู ุงูุญุงูู ููุฌููุนุฉ docker
sudo usermod -aG docker $USER

# ๐งน ุญุฐู Postiz ุงููุฏูู ุฅู ูุฌุฏ
sudo docker stop postiz postiz-postgres postiz-redis 2>/dev/null || true
sudo docker rm postiz postiz-postgres postiz-redis 2>/dev/null || true
sudo docker network rm postiz-network 2>/dev/null || true

# ุฅูุดุงุก ูุฌูุฏ ูููุดุฑูุน
mkdir -p ~/postiz
cd ~/postiz

# ๐ณ ุฅูุดุงุก ููู docker-compose.yml
cat > docker-compose.yml <<EOF
services:
  postiz:
    image: ghcr.io/gitroomhq/postiz-app:latest
    container_name: postiz
    restart: always
    environment:
      # URLs - ูุฌุจ ุชุบููุฑ ูุฐู ุงูููู
      MAIN_URL: "https://$DOMAIN"
      FRONTEND_URL: "https://$DOMAIN"
      NEXT_PUBLIC_BACKEND_URL: "https://$DOMAIN/api"
      JWT_SECRET: "$JWT_SECRET"
 
      # ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุงูู Redis
      DATABASE_URL: "postgresql://postiz-user:postiz-password@postiz-postgres:5432/postiz-db-local"
      REDIS_URL: "redis://postiz-redis:6379"
      BACKEND_INTERNAL_URL: "http://localhost:3000"
      IS_GENERAL: "true"
      DISABLE_REGISTRATION: "false"
      
      # ุฅุนุฏุงุฏุงุช ุงูุชุฎุฒูู
      STORAGE_PROVIDER: "local"
      UPLOAD_DIRECTORY: "/uploads"
      NEXT_PUBLIC_UPLOAD_DIRECTORY: "/uploads"
      
      # ุฅุนุฏุงุฏ ุนุฏู ุงูุฃูุงู ููู HTTP (ุฅุฐุง ูู ุชูู ุชุณุชุฎุฏู HTTPS)
      # NOT_SECURED: "true"
    volumes:
      - postiz-config:/config/
      - postiz-uploads:/uploads/
    ports:
      - "5000:5000"
    networks:
      - postiz-network
    depends_on:
      postiz-postgres:
        condition: service_healthy
      postiz-redis:
        condition: service_healthy
 
  postiz-postgres:
    image: postgres:17-alpine
    container_name: postiz-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postiz-password
      POSTGRES_USER: postiz-user
      POSTGRES_DB: postiz-db-local
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - postiz-network
    healthcheck:
      test: pg_isready -U postiz-user -d postiz-db-local
      interval: 10s
      timeout: 3s
      retries: 3
      
  postiz-redis:
    image: redis:7.2
    container_name: postiz-redis
    restart: always
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postiz-redis-data:/data
    networks:
      - postiz-network
 
volumes:
  postgres-volume:
    external: false
  postiz-redis-data:
    external: false
  postiz-config:
    external: false
  postiz-uploads:
    external: false
 
networks:
  postiz-network:
    external: false
EOF

echo "๐ ุชู ุฅูุดุงุก ููู docker-compose.yml"

# ๐ง ุฅุนุฏุงุฏ Nginx ูู Reverse Proxy
sudo tee /etc/nginx/sites-available/postiz.conf > /dev/null <<EOF
server {
    server_name $DOMAIN;

    location / {
        proxy_pass http://127.0.0.1:5000;

        # โ ุฏุนู WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";

        # โ ุชูุฑูุฑ ุงูููุฏุฑ ุจุดูู ุตุญูุญ
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;

        # โ ููุน ุงููุทุงุน ุงูุงุชุตุงู
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        send_timeout 3600s;
        
        # โ ุฒูุงุฏุฉ ุญุฌู ุงููููุงุช ุงููุณููุญ ุจุฑูุนูุง
        client_max_body_size 100M;
    }
}
EOF

# ุชูุนูู ุงููููุน
sudo ln -s /etc/nginx/sites-available/postiz.conf /etc/nginx/sites-enabled/ || true
sudo nginx -t && sudo systemctl restart nginx

# ๐ณ ุชุดุบูู Postiz
echo "๐ณ ุชุดุบูู Postiz..."
sudo docker compose up -d

# ุงูุชุธุงุฑ ุจุฏุก ุงูุฎุฏูุงุช
echo "โณ ุงูุชุธุงุฑ ุจุฏุก ุงูุฎุฏูุงุช..."
sleep 30

# ๐ ุงูุญุตูู ุนูู SSL ูู Let's Encrypt
echo "๐ ุงูุญุตูู ุนูู ุดูุงุฏุฉ SSL..."
sudo certbot --nginx -d $DOMAIN --non-interactive --agree-tos -m $EMAIL

# ูุชุญ ุงูุฌุฏุงุฑ ุงููุงุฑู (UFW)
sudo ufw allow OpenSSH
sudo ufw allow 'Nginx Full'
sudo ufw --force enable

# ๐ก๏ธ ุชุซุจูุช Watchtower ููุชุญุฏูุซ ุงูุชููุงุฆู
echo "๐ก๏ธ ุชุซุจูุช Watchtower ููุชุญุฏูุซ ุงูุชููุงุฆู..."
sudo docker stop watchtower 2>/dev/null || true
sudo docker rm watchtower 2>/dev/null || true
sudo docker run -d \
  --name watchtower \
  -v /var/run/docker.sock:/var/run/docker.sock \
  containrrr/watchtower postiz postiz-postgres postiz-redis --cleanup --interval 3600

# ุฅุนุงุฏุฉ ุชุดุบูู ุงูุฎุฏูุงุช ููุชุฃูุฏ ูู ุนูููุง ูุน SSL
echo "๐ ุฅุนุงุฏุฉ ุชุดุบูู ุงูุฎุฏูุงุช..."
sudo docker compose restart

echo ""
echo "โ ุชู ุชุซุจูุช Postiz ุจูุฌุงุญ!"
echo "๐ ุงูุฑุงุจุท: https://$DOMAIN"
echo "๐ JWT Secret: $JWT_SECRET"
echo "๐ ููู ุงูุชูููู: ~/postiz/docker-compose.yml"
echo ""
echo "๐ ุงูุฎุทูุงุช ุงูุชุงููุฉ:"
echo "1. ุงูุชุธุฑ 2-3 ุฏูุงุฆู ูุจุฏุก ุฌููุน ุงูุฎุฏูุงุช"
echo "2. ุงุฐูุจ ุฅูู https://$DOMAIN"
echo "3. ุฃูุดุฆ ุญุณุงุจู ุงูุฃูู"
echo "4. ููููู ุชุนุทูู ุงูุชุณุฌูู ูุงุญูุงู ุจุชุบููุฑ DISABLE_REGISTRATION ุฅูู true"
echo ""
echo "๐ง ุฃูุงูุฑ ูููุฏุฉ:"
echo "   - ุนุฑุถ ุงูุณุฌูุงุช: cd ~/postiz && sudo docker compose logs -f"
echo "   - ุฅุนุงุฏุฉ ุงูุชุดุบูู: cd ~/postiz && sudo docker compose restart"
echo "   - ุฅููุงู ุงูุฎุฏูุฉ: cd ~/postiz && sudo docker compose down"
echo "   - ุชุญุฏูุซ: cd ~/postiz && sudo docker compose pull && sudo docker compose up -d"
echo ""
echo "๐ก๏ธ Watchtower ุณูุชุญูู ูู ุณุงุนุฉ ูู ูุฌูุฏ ุชุญุฏูุซุงุช ููุทุจููุง ุชููุงุฆูุงู"

# ุงูุชุญูู ูู ุญุงูุฉ ุงูุฎุฏูุงุช
echo "๐ ุญุงูุฉ ุงูุฎุฏูุงุช:"
sudo docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
